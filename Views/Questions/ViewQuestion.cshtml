@model CodeSOSProject.ViewModels.QuestionViewModel

@{ 
    ViewBag.Title = "View Question";
}

<div class="row">
    <div class="col-sm-12">

        <div class="form-group row">
            <div class="col-10 offset-sm-2">
                <h3>@Model.QuestionName</h3>

                <div class=" row">
                    <div class="col-2">
                        <span class="badge bg-info">@Model.Category.CategoryName</span>
                    </div>
                    <div class="col-2">
                        @if (Convert.ToString(Session["CurrentUserName"]) == Model.User.Name)
                        {
                            <span class="text-primary">by you</span>
                        }
                        else
                        {
                            <span class="text-primary">by  @Model.User.Name</span>
                        }
                    </div>

                    <div class="col-3">
                        <span class="text-success">@Model.QuestionDateAndTime</span>
                    </div>

                    <div class="col-2 text-success">
                        Views
                        <span class="badge rounded-pill bg-success col-2">@Model.ViewsCount</span>
                    </div>
                </div>

                @if (Model.AnswersCount == 0)
                {
                    <p class="text-danger">No answers uploaded yet!</p>
                }
            </div>
        </div>

        @for (int i = 0; i < Model.Answers.Count; i++)
        {
            <div class="form-group row">
                <div class="col-sm-2">
                    <span class="badge bg-secondary col-2 votesCount">
                        @Model.Answers[i].VotesCount
                    </span>
                    Votes

                    @if (Session["CurrentUserName"] != null && Convert.ToInt32(Session["CurrentUserID"]) != Model.Answers[i].UserID)
                    {
                        if (Model.Answers[i].CurrentUserVoteType == 1)
                        {
                            <img src="~/Images/up-color.png" class="btnUpVote" style="cursor:pointer" width="24" data-answerID="@Model.Answers[i].AnswerID" />
                            <img src="~/Images/down-empty.png" class="btnDownVote" style="cursor:pointer" width="24" data-answerID="@Model.Answers[i].AnswerID" />
                        }
                        else if (Model.Answers[i].CurrentUserVoteType == -1)
                        {
                            <img src="~/Images/up-empty.png" class="btnUpVote" style="cursor:pointer" width="24" data-answerID="@Model.Answers[i].AnswerID" />
                            <img src="~/Images/down-color.png" class="btnDownVote" style="cursor:pointer" width="24" data-answerID="@Model.Answers[i].AnswerID" />
                        }
                        else
                        {
                            <img src="~/Images/up-empty.png" class="btnUpVote" style="cursor:pointer" width="24" data-answerID="@Model.Answers[i].AnswerID" />
                            <img src="~/Images/down-empty.png" class="btnDownVote" style="cursor:pointer" width="24" data-answerID="@Model.Answers[i].AnswerID" />
                        }
                    }
                </div>

                <div class="col-sm-7">
                    @if (Convert.ToInt32(Session["CurrentUserID"]) != Model.Answers[i].UserID)
                    {
                        @Model.Answers[i].AnswerText
                    }
                    else
                    {
                        <p class="answer">@Model.Answers[i].AnswerText</p>
                        <button class="btn btn-info editButton">Edit</button>

                        <form class="needs-validation hidden" novalidate="novalidate" action="/questions/editanswer" method="post">
                            <div class="form-group row">
                                <div class="col-sm-12">
                                    <h4>Edit your answer</h4>

                                    @Html.AntiForgeryToken()

                                    <input type="hidden" name="AnswerID" value="@Model.Answers[i].AnswerID" />
                                    <input type="hidden" name="QuestionID" value="@Model.Answers[i].QuestionID" />

                                    <div class="row">
                                        <div class="form-group col-sm-12">
                                            <textarea class="form-control" id="txtAnswer" placeholder="Your answer" required>@Model.Answers[i].AnswerText</textarea>
                                        </div>
                                        <div class="valid-feedback">
                                            Looks good!
                                        </div>
                                        <div class="invalid-feedback">
                                            Please enter a valid answer
                                        </div>
                                    </div>

                                    <button type="submit" class="mt-4 btn btn-primary">Update Answer</button>
                                    <div class="text-danger">
                                        @Html.ValidationSummary()
                                    </div>
                                </div>
                            </div>
                        </form>
                    }

                </div>
            </div>

            <div class="col-sm-1">
                @if(Convert.ToInt32(Session["CurrentUserID"]) != Model.Answers[i].UserID)
                {
                    @: by @Model.Answers[i].User.Name
                }
                else
                {
                    @: by you
                }
            </div>
            <div class="col-sm-2">
                on @Model.Answers[i].AnswerDateAndTime
            </div>
            }

        @if (Session["CurrentUserName"] != null)
            {
                <form class="needs-validation" novalidate="novalidate" action="/questions/addanswer" method="post">
                    <div class="form-group row">
                        <div class="col-sm-12">
                            <h4>Add your answer</h4>

                            @Html.AntiForgeryToken()
                            
                            <input type="hidden" name="QuestionID" value="@Model.QuestionID" />

                            <div class="row">
                                <div class="form-group col-sm-12">
                                    <textarea class="form-control" id="txtAnswer" placeholder="Your answer" required></textarea>
                                </div>
                                <div class="valid-feedback">
                                    Looks good!
                                </div>
                                <div class="invalid-feedback">
                                    Please enter a valid answer
                                </div>
                            </div>

                            <button type="submit" class="mt-4 btn btn-primary">Add Answer</button>
                            <div class="text-danger">
                                @Html.ValidationSummary()
                            </div>
                        </div>
                    </div>
                </form>
            }
    </div>
  
</div>

<script>
    $("a[href]='/questions/viewquestion'").addClass("active");
</script>